import{B as $,j as m,k as j,h as g}from"./index-CizmrxTt.js";const ee=[{id:"klok-klap",title:"Klingelende Klok",description:"Loop alsof je een bezorg-Piet bent en tik onderweg vijf decorstukken aan. De snelste wint.",type:"versus",minPlayers:2,maxPlayers:4},{id:"koek-koers",title:"Koekjes Koers",description:"Balanceer een pepernoot op een lepel. Wie het verst geraakt zonder te laten vallen wint.",type:"individual",minPlayers:1,maxPlayers:1},{id:"gift-glider",title:"Gift Glider",description:"Maak in duo een slee van aanwezige materialen en glijd 2 meter. Jury kiest de meest creatieve slee.",type:"versus",minPlayers:2,maxPlayers:4},{id:"sneeuw-mime",title:"Sneeuw Mime",description:"Doe een winteractiviteit in pantomime. De rest raadt. Degene die het snelst correct raadt scoort.",type:"individual",minPlayers:1,maxPlayers:1},{id:"lichtlijn",title:"Lichtjeslijn",description:"Leg een snoer van lichtgevende objecten zonder dat de lijn breekt. Meest rechte lijn wint.",type:"versus",minPlayers:2,maxPlayers:4},{id:"pakjespong",title:"Pakjes Pong",description:"Versus battle: kaats een zachte kerstbal over de tafel. Laat hem niet vallen! Eerste tot 5 punten wint.",type:"versus",minPlayers:2,maxPlayers:4},{id:"duo-dans",title:"Duo Dans der Rendieren",description:"Maak met zijn tweeën een korte syncro-dans op de chiptune beat. Publiek stemt.",type:"versus",minPlayers:2,maxPlayers:4},{id:"rijm-rap",title:"Rijm Rap Blitz",description:"Spit in 45 seconden een rijm over cadeaus voor iemand naar keuze. Publiek kiest de winnaar.",type:"individual",minPlayers:1,maxPlayers:1},{id:"puzzel-piet",title:"Puzzel-Piet Relay",description:"Bouw in duo een mini-kersthuisje met blokken. Wissel elke 20 seconden. Klaar? Roep “Ho-Ho!”.",type:"versus",minPlayers:2,maxPlayers:4},{id:"sok-shuffle",title:"Sokken Shuffle",description:"Versus: schuif in dikke kerstsokken over de vloer en verzamel kaartjes. Meeste kaartjes wint.",type:"versus",minPlayers:2,maxPlayers:4},{id:"mystery-melodie",title:"Mystery Melodie",description:"Fluit of neurie een feestnummer. Wie het lied als eerste herkent, scoort een punt.",type:"individual",minPlayers:1,maxPlayers:1},{id:"sneeuw-stapel",title:"Sneeuwvlok Stapel",description:"Individueel: stapel marshmallows zo hoog mogelijk binnen de tijd. Toren om? Opnieuw beginnen.",type:"individual",minPlayers:1,maxPlayers:1}],ne="/assets/Julot-Dm7o0kCE.png",te="/assets/Flo-3ytGCO-u.png",ae="/assets/Tess-D-3Y02l7.png",le="/assets/Bas-D1xI_qpA.png",se=[{id:"julot",name:"Julot",color:"#6dd5ff",accent:"#c9f1ff",sprite:ne,enabled:!0,score:0},{id:"flo",name:"Flo",color:"#ff8a8a",accent:"#ffd1d1",sprite:te,enabled:!0,score:0},{id:"tess",name:"Tess",color:"#ffbe3d",accent:"#ffe3a8",sprite:ae,enabled:!0,score:0},{id:"bas",name:"Bas",color:"#c98bff",accent:"#f1d9ff",sprite:le,enabled:!0,score:0}],ie={keepScore:!0,timerSeconds:75,participantsMode:"auto",forceTimerSound:!0,recentChallengeWindow:4,avoidRepeats:!0,maxAutoPlayers:4},re=0,C=i=>()=>{let a=i+=1831565813;return a=Math.imul(a^a>>>15,a|1),a^=a+Math.imul(a^a>>>7,a|61),((a^a>>>14)>>>0)/4294967296},oe=()=>se.map(i=>({...i})),ue=()=>ee.map(i=>({...i})),pe=$("game",()=>{const i=m(oe()),a=m(ue()),y=m([]),l=j({...ie}),o=m(null),c=m([]),u=m("idle"),s=j({running:!1,remaining:l.timerSeconds,endsAt:0}),P=m(0),v=m([]),M=m(0),h=m(Date.now()%1e5);let x=C(h.value);const z=g(()=>[...i.value].sort((e,n)=>n.score-e.score||e.name.localeCompare(n.name))),p=g(()=>i.value.filter(e=>e.enabled)),f=g(()=>a.value.find(e=>e.id===o.value)??null),S=g(()=>Date.now()>=P.value),k=()=>x(),R=e=>{const n=[...e];for(let t=n.length-1;t>0;t-=1){const r=Math.floor(k()*(t+1));[n[t],n[r]]=[n[r],n[t]]}return n},A=e=>{const n=p.value.length;if(n===0)return 0;switch(e){case"solo":return 1;case"duo":return Math.min(2,n);case"trio":return Math.min(3,n);case"all":return n;default:if(n===1)return 1;const t=Math.min(l.maxAutoPlayers,n),r=Math.floor(k()*t)+1;return Math.min(Math.max(r,1),n)}},D=e=>{if(e===0)return[];const n=p.value;return n.length<=e?n.map(t=>t.id):R(n).slice(0,e).map(t=>t.id)},W=e=>{let n=a.value.filter(t=>e>=t.minPlayers);return l.avoidRepeats&&l.recentChallengeWindow>0&&(n=n.filter(t=>!v.value.includes(t.id))),n.length===0&&(n=a.value.filter(t=>e>=t.minPlayers)),n},G=e=>{if(!(!l.avoidRepeats||l.recentChallengeWindow<=0))for(v.value.push(e);v.value.length>l.recentChallengeWindow;)v.value.shift()},B=e=>{if(!e)return;const n=v.value.indexOf(e);n!==-1&&v.value.splice(n,1)},I=(e,n)=>{const t=Math.min(e.maxPlayers,p.value.length),r=e.minPlayers;if(t<r)return null;let d=n;return d<=0&&(d=r),d=Math.min(d,t),d=Math.max(d,r),d},w=()=>{const e=p.value.length;if(!e)return o.value=null,c.value=[],null;const n=A(l.participantsMode),t=W(e);if(t.length===0)return o.value=null,c.value=[],null;const r=t[Math.floor(k()*t.length)],d=I(r,n);if(!d)return o.value=null,c.value=[],null;const Z=D(d);return B(o.value),o.value=r.id,G(r.id),c.value=Z,s.running=!1,s.remaining=l.timerSeconds,s.endsAt=0,u.value="ready",r},T=()=>((!f.value||u.value==="complete"||u.value==="timeup")&&w(),f.value?(s.remaining=l.timerSeconds,s.endsAt=performance.now()+l.timerSeconds*1e3,s.running=!0,u.value="running",!0):!1),K=()=>S.value?(w(),P.value=Date.now()+re,u.value="ready",!0):!1,F=e=>{if(!e.length||!f.value)return;const n=e.filter(t=>c.value.includes(t));n.length&&(l.keepScore&&(i.value=i.value.map(t=>n.includes(t.id)?{...t,score:t.score+1}:t)),y.value.push({challengeId:f.value.id,playerIds:[...c.value],winnerIds:[...n],timestamp:Date.now()}),s.running=!1,s.remaining=0,s.endsAt=0,u.value="complete",M.value+=1)},H=()=>{if(!s.running)return;const e=s.endsAt-performance.now();s.remaining=Math.max(0,e/1e3),s.remaining<=0&&(s.running=!1,s.remaining=0,u.value="timeup")},J=()=>{i.value=i.value.map(e=>({...e,score:0}))},L=e=>{i.value=i.value.map(n=>n.id===e?{...n,enabled:!n.enabled}:n)},O=(e,n)=>{i.value=i.value.map(t=>t.id===e?{...t,...n}:t)},V=e=>{l.timerSeconds=Math.max(10,e),s.remaining=l.timerSeconds},q=e=>{l.participantsMode=e},E=e=>{l.maxAutoPlayers=Math.max(1,Math.min(e,i.value.length||1))},Y=e=>{l.keepScore=e},_=e=>{l.recentChallengeWindow=Math.max(0,e),v.value=v.value.slice(-l.recentChallengeWindow)},N=e=>{l.avoidRepeats=e},Q=e=>{const n=a.value.findIndex(t=>t.id===e.id);n===-1?a.value=[...a.value,e]:a.value.splice(n,1,e)},U=e=>{a.value=a.value.filter(n=>n.id!==e),o.value===e&&(o.value=null,c.value=[],u.value="idle")},X=e=>{a.value=e,o.value=null,c.value=[],v.value=[],u.value="idle"},b=e=>{h.value=e,x=C(h.value)};return{players:i,challenges:a,challengeHistory:y,settings:l,activeChallengeId:o,activePlayerIds:c,activeChallenge:f,gamePhase:u,timer:s,rerollAvailableAt:P,rerollReady:S,winnerBurst:M,scoreboard:z,seedValue:h,enabledPlayers:p,rollChallenge:w,startOrResumeChallenge:T,reroll:K,markWinners:F,tickTimer:H,resetScores:J,togglePlayer:L,updatePlayer:O,setTimerSeconds:V,setParticipantsMode:q,setMaxAutoPlayers:E,setKeepScore:Y,setRecentWindow:_,setAvoidRepeats:N,upsertChallenge:Q,deleteChallenge:U,importChallenges:X,randomizeSeed:()=>{b(Math.floor(Math.random()*1e6))},setSeed:b,clearHistory:()=>{y.value=[]},resetGame:()=>{o.value=null,c.value=[],s.running=!1,s.remaining=l.timerSeconds,s.endsAt=0,u.value="idle"}}});export{pe as u};
